dist: trusty
language: rust
rust: 1.40.0
sudo: required

env:
  global:
    - CRATE_NAME=certificate_carver

matrix:
  include:
    - env:
        - TARGET=i686-unknown-linux-gnu
        - PKG_CONFIG_ALLOW_CROSS=1
        - CACHE_SCCACHE_DIR="$HOME/.cache/sccache"
      addons:
        apt:
          packages:
            - gcc-multilib
            - libc6:i386
            - libc6-i386
            - libc6-dev-i386
            - libgcc1:i386
            - libssl1.0.0:i386
            - libssl-dev:i386
            - libstdc++6:i386
            - zlib1g:i386
    - env:
        - TARGET=x86_64-unknown-linux-gnu
        - CACHE_SCCACHE_DIR="$HOME/.cache/sccache"
    - env:
        - TARGET=x86_64-apple-darwin
        - CACHE_SCCACHE_DIR="$HOME/Library/Caches/Mozilla.sccache"
      os: osx

before_install:
  - if [ "$TARGET" = "i686-unknown-linux-gnu" ]; then rustup target add $TARGET; fi
  - rustup self update

  - export SCCACHE_VER=0.2.11 RUSTC_WRAPPER=sccache
  - case "$TRAVIS_OS_NAME" in
      linux )
        (cd /tmp
          && travis_retry curl -sSL "https://github.com/mozilla/sccache/releases/download/${SCCACHE_VER}/sccache-${SCCACHE_VER}-x86_64-unknown-linux-musl.tar.gz" | tar xzf -
          && sudo mv "sccache-${SCCACHE_VER}-x86_64-unknown-linux-musl/sccache" /usr/local/bin/sccache;)
        ;;
      osx )
        (cd "${TMPDIR}"
          && travis_retry curl -sSL "https://github.com/mozilla/sccache/releases/download/${SCCACHE_VER}/sccache-${SCCACHE_VER}-x86_64-apple-darwin.tar.gz" | tar xzf -
          && sudo mv "sccache-${SCCACHE_VER}-x86_64-apple-darwin/sccache" /usr/local/bin/sccache;)
        ;;
      * ) unset RUSTC_WRAPPER;;
    esac

install:
  - source ~/.cargo/env || true

before_script:
  - rustup component add rustfmt

script:
  - if [ -z $TRAVIS_TAG ]; then cargo fmt --all -- --check; fi
  - if [ -z $TRAVIS_TAG ]; then cargo build --target $TARGET; fi
  - if [ -z $TRAVIS_TAG ]; then cargo build --target $TARGET --release; fi
  - if [ -z $TRAVIS_TAG ] && [ -z $DISABLE_TESTS ]; then cargo test --target $TARGET; fi
  - if [ -z $TRAVIS_TAG ] && [ -z $DISABLE_TESTS ]; then cargo test --target $TARGET --release; fi

before_deploy:
  - export src=$(pwd)
  - case "$TRAVIS_OS_NAME" in
      linux)
        export stage=$(mktemp -d)
        ;;
      osx)
        export stage=$(mktemp -d -t tmp)
        ;;
    esac
  - cargo rustc --bin certificate_carver --target $TARGET --release -- -C lto
  - cp target/$TARGET/release/certificate_carver $stage/
  - (cd $stage && tar czf $src/$CRATE_NAME-$TRAVIS_TAG-$TARGET.tar.gz *)
  - rm -rf $stage

deploy:
  api_key:
    secure: "lzqwPa7f9wX6D+G6Kheuh/I/msKgkNvt8oubLagWtDGgUNdPB4g57EAR/YMOe1i5eHwAjHhQrAoD4oWIhY2oO3jZIGf4D8Vo4XOYMcqo9CH2q30qp+BwdZ9467zHJ9ZHf7+R+JbSh4yuZxP4My7/hfRwaN78wh2UrZ7qSn6tQQQFCTDwQG+a+tHvcQdRV6C484XWdpsRSryrK+4f86gegpQOOmQxibgHM5y07BRrs+O6RDtUwJHI2zwbXUaQHOS2tk5hT2ta4cRLQ/dWuGAkaGlynZEi8MjzINoTJEOLNCuwp6mUa3MRfK/ygJX1R3YDJ0KF97wPvpbeuQed8wsR3lcwsO/HwF3q8JRbXNE45lcLEX5//aDFl//5+/X3FYKohYNqPGF3rGETA3U/cDQmoQgVN2OZRVpoXA8J5htDJckQbtIaEkheonUW+PfxsDOwFSVIB3yi/Y96z5YXuIrK/gDchSfKi+tb49g6LrW7vY6qdCSFDvzTD5T9OWrFvpaByaB+Kv7IgetIPK3XL/FpZySZmHq91Tv8340oy3NympiV4PLNIKcbi7osEbsoM4fzcsf5VSCdL/VHxvcNrZWuf8+KaB/j6t9zEjLioZJ+VNdt6km3fODxOaOm2TKzVOOZk0FksljvgEufX415mZjOKSlbjkaTZc0+5ayH4dh667I="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    tags: true
  provider: releases
  skip_cleanup: true

cache:
  directories:
    - "$HOME/.cargo"
    - "$HOME/.rustup"
    - "$CACHE_SCCACHE_DIR"
before_cache:
  - rm -rf "$HOME/.cargo/registry/src"
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r "$HOME/.cargo"

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - dev

notifications:
  email:
    on_success: never
